
const settings = require('../settings')
const {cmd , commands} = require('../lib/command')
const os = require("os")
const fs                = require('fs')
const path              = require('path')
const saveSettings = () => {
  try {
    fs.writeFileSync(
      path.join(__dirname, '..', 'settings.json'),
      JSON.stringify(settingsStorage, null, 2)
    )
  } catch (e) {
    console.error('‚ö†Ô∏è  Settings save error:', e)
  }
}
const {runtime} = require('../lib/functions')

cmd({
    pattern: "system",
    alias: ["about","bot"],
    desc: "Check bot online or no.",
    category: "main",
    react: "üìü",
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{

    let status = `
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
_*‚öôÔ∏è ‚ò£Ô∏èÔº£Ôº®Ôº°Ôº≠Ôº©-Ôº≠Ôº§ Ôº≥ÔΩôÔΩìÔΩîÔΩÖÔΩç  Ôº©ÔΩéÔΩÜÔΩè ‚öôÔ∏è*_
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îÇ‚ùñ *·¥ú·¥ò·¥õ…™·¥ç·¥á :* _${runtime(process.uptime())}_
‚îÇ‚ùñ * Ä·¥Ä·¥ç ·¥úÍú±·¥Ä…¢·¥á :*  _${(process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2)}MB / ${Math.round(require('os').totalmem / 1024 / 1024)}MB_
‚îÇ‚ùñ * ú·¥èÍú±·¥õ …¥·¥Ä·¥ç·¥á :* _${os.hostname()}_
‚îÇ‚ùñ *·¥è·¥°…¥·¥á Ä :* _C ú·¥Ä·¥ç…™ E·¥Ö…™·¥õZ_
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

> *·¥Ñ Ä·¥á·¥Ä·¥õ·¥á·¥Ö  ô è C ú·¥Ä·¥ç…™ E·¥Ö…™·¥õZ*    
`
await conn.sendMessage(from,{image: {url: `https://raw.githubusercontent.com/Ubalasiya/Chamihelper/refs/heads/main/chami-md-main.jpg`},caption: status,
contextInfo: {
                mentionedJid: ['94766315540@s.whatsapp.net'], // specify mentioned JID(s) if any
                groupMentions: [],
                forwardingScore: 1,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    
                    newsletterName: "Ôº£Ôº®Ôº°Ôº≠Ôº©-Ôº≠Ôº§ ‚úª",
                    serverMessageId: 999
                }            
            }
     }, {quoted: mek});
    
}catch(e){
    console.log(e)
    reply(`${e}`)
    }
    })


//__________ping______

cmd({
    pattern: "ping2",
    desc: "Check bot online or no.",
    category: "main",
    react: "üöÄ",
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{
    const startTime = Date.now()
        const message = await conn.sendMessage(from, { text: '*pong...*' })
        const endTime = Date.now()
        const ping = endTime - startTime
        await conn.sendMessage(from, { text: `*‚ö¨Ôº£Ôº®Ôº°Ôº≠Ôº©-Ôº≠Ôº§ Ôº≥Ôº∞Ôº•Ôº•Ôº§ : ${ping}ms*`,
                                      contextInfo: {
                mentionedJid: ['94766315540@s.whatsapp.net'], // specify mentioned JID(s) if any
                groupMentions: [],
                forwardingScore: 1,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    
                    newsletterName: "Ôº£Ôº®Ôº°Ôº≠Ôº©-Ôº≠Ôº§ ‚úª",
                    serverMessageId: 999
                },
                externalAdReply: {
                    title: 'CHAMI MD',
                    body: 'C ú·¥Ä·¥ç…™ E·¥Ö…™·¥õZ',
                    mediaType: 1,
                    
                    thumbnailUrl: 'https://raw.githubusercontent.com/Ubalasiya/Chamihelper/refs/heads/main/chami-md-main.jpg', // This should match the image URL provided above
                    renderLargerThumbnail: false,
                    showAdAttribution: true
                }
            }
     }, {quoted: mek});
    } catch (e) {
        console.log(e)
        reply(`${e}`)
    }
})

//Owner
cmd({
    pattern: "owner",
    desc: "cmd",
    category: "system",
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{
let cap = `
‚îè‚îÅ‚î´ *‚ö¨C ú·¥Ä·¥ç…™-·¥ç·¥Ö‚ö¨* ‚î£‚îÅ‚úæ
‚îÉ
‚î£‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
- *·¥Ñ ú·¥Ä·¥ç…™ è·¥Ä ú ú...* üíÄ‚É§
        94766315540
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
> ·¥Ñ ú·¥Ä·¥ç…™-·¥ç·¥Ö
`
return await conn.sendMessage(from,{image: {url: `https://raw.githubusercontent.com/Ubalasiya/Chamihelper/refs/heads/main/chami-md-main.jpg`},caption: cap,
                                    contextInfo: {
                mentionedJid: ['94766315540@s.whatsapp.net'], // specify mentioned JID(s) if any
                groupMentions: [],
                forwardingScore: 1,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    
                    newsletterName: "·¥Ñ ú·¥Ä·¥ç…™-·¥ç·¥Ö ‚úª",
                    serverMessageId: 999
                },
                externalAdReply: {
                    title: 'CHAMI MD',
                    body: 'C ú·¥Ä·¥ç…™ E·¥Ö…™·¥õZ',
                    mediaType: 1,
                    
                    thumbnailUrl: 'https://raw.githubusercontent.com/Ubalasiya/Chamihelper/refs/heads/main/chami-md-main.jpg', // This should match the image URL provided above
                    renderLargerThumbnail: true,
                    showAdAttribution: true
                }
            }
     }, {quoted: mek});
}catch(e){
console.log(e)
reply(`${e}`)
}
})
//______________restart_____________

cmd({
    pattern: "restart",
    alias: ["update","up"],
    react: "‚ò£Ô∏è",
    desc: "restart the bot",
    category: "owner",
    filename: __filename
},
async(conn, mek, m,{from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{
    if (!isOwner) return reply("*üìõ ·¥è…¥ ü è ·¥õ ú·¥á ·¥è·¥°…¥·¥á Ä ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö!*");
const {exec} = require("child_process")
reply("*restarting...*")
exec("pm2 restart all")
}catch(e){
console.log(e)
reply(`${e}`)
}
})

//________Settings_________

